swagger: '2.0'
info:
  title: Sunglasses-io API
  description: An API to support Sunglasses.io.
  version: '1.0.0'
host: api.sunglasses.io (localhost:3001 for dev)
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /brands:
    get:
      tags:
        - Brands
      summary: Returns all brands of sunglasses in inventory
      operationId: retrieveBrands
      responses:
        '200':
          description: An array of sunglass-brand objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Brands'
        '404':
          description: Brands not found.
        default:
          description: Unexpected error
        schema:
          $ref: '#/definitions/Errors'
  /brands/{id}/products: #or should it be "/:id/"
    get:
      tags:
        - Products by Brand
      summary: Returns all products of sunglasses of specified brand
      operationId: retrieveProductsByBrand
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of a specific brand
          type: string
      responses:
        '200':
          description: An array of sunglass products by one brand
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductsByBrand'
        '404':
          description: Brand id or products not found.
        default:
          description: Unexpected error
        schema:
          $ref: '#/definitions/Errors'
  /products:
    get:
      tags:
        - Products
      summary: Returns products of sunglasses as filtered by user query. Returns all products if query is empty.
      operationId: retrieveProducts
      parameters:
        - name: query
          in: path
          description: Users search query
          required: false
          type: string
      responses:
        '200':
          description: An array of sunglass products by one brand
          schema:
            type: array
            items:
              $ref: '#/definitions/Products'
        '404':
          description: Products not found
        default:
          description: Unexpected error
        schema:
          $ref: '#/definitions/Errors'
  /login:
    post:
      tags:
        - User Login
      summary: Login with username and password
      operationId: loginUser
       consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: login
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: Successful login
          schema:
            type: string
        '400':
          description: Incorrectly formatted credentials
        '401':
          description: Invalid username or password
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'
  /me/cart:
    get:
      tags:
        - Shopping Cart
      summary: Retrieve signed-in users cart
      operationId: retrieveCart
      parameters:
        - in: header
          name: accessToken
          description: The users access token
          required: true
          type: string
      responses:
        '200':
          description: An array of sunglass products in the users cart
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
        '401':
          description: You must have access to this endpoint to continue
        '404':
          description: User cannot be found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put: #post???
      tags:
        - Shopping Cart
      summary: Update quantities of products in cart
      operationId: addToCart
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: accessToken
          description: The users access token
          required: true
          type: string
        - in: body
          name: updatedQuantities
          description: Updated quantities of products in cart
          required: true
          schema:
            $ref: '#/definitions/Quantities'
      responses:
        '200':
          description: Successfully updated cart
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
        '401':
          description: You must have access to this endpoint to continue
        '404':
          description: User cannot be found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'
    delete:
      tags:
        - Shopping Cart
      summary: Delete items from cart
      operationId: deleteCartItems
      parameters:
        - in: path
          name: productId
          description: Identifier of product to remove from cart
          required: true
          type: string
        - in: header
          name: accessToken
          description: The users access token
          required: true
          type: string
      responses:
        '200':
          description: Item successfuly deleted from cart
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
        '400':
          description: Invalid product Id
        '401':
          description: You must have access to this endpoint to continue
        '404':
          description: User cannot be found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'
definitions:
  Brands:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        description: Identifier representing a specific brand
      name:
        type: string
        description: The brand name of sunglasses
  ProductsByBrand:
    type: object
    required:
      - id
      - categoryId
      - name
      - price
    properties:
      id:
        type: string
        description: Identifier representing one specific model of sunglasses
      categoryId:
        type: string
        description: Identifier representing the brand that makes the sunglasses product
      name:
        type: string
        description: The model name of the sunglasses product
      description:
        type: string
        description: A short description of the model of sunglasses
      price:
        type: number
        description: The unit price of the sunglasses
      imageUrls:
        type: array
        items:
          type: string
        description: Three urls for jpg photos of the specific model of sunglasses (currently all product objects contain the same imageUrl, repeated three times, as a placeholder)
  Products:
    type: object
    required:
      - id
      - categoryId
      - name
      - price
    properties:
      id:
        type: string
        description: Identifier representing one specific model of sunglasses
      categoryId:
        type: string
        description: Identifier representing the brand that makes the sunglasses product
      name:
        type: string
        description: The model name of the sunglasses product
      description:
        type: string
        description: A short description of the model of sunglasses
      price:
        type: number
        description: The unit price of the sunglasses
      imageUrls:
        type: array
        items:
          type: string
        description: Three urls for jpg photos of the specific model of sunglasses (currently all product objects contain the same imageUrl, repeated three times, as a placeholder)
  Login:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: username
      password:
        type: string
        description: password
  Cart:
    type: object
     required:
      - id
      - categoryId
      - name
      - price
      - quantity
    properties:
      id:
        type: string
        description: Identifier representing one specific model of sunglasses
      categoryId:
        type: string
        description: Identifier representing the brand that makes the sunglasses product
      name:
        type: string
        description: The model name of the sunglasses product
      description:
        type: string
        description: A short description of the model of sunglasses
      price:
        type: number
        description: The unit price of the sunglasses
      imageUrls:
        type: array
        items:
          type: string
        description: Three urls for jpg photos of the specific model of sunglasses (currently all product objects contain the same imageUrl, repeated three times, as a placeholder)
      quantity:
        type: integer
        description: The quanity of the specified item in the cart
  Quantities:
    type: object
    properties:
      updatedQuantities:
        type: array
        items:
          type: number
        description: Array of updated quantities of items in the cart
  Errors:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

# **********************
#    All Routes
#  **********************
# =========DONE========
#  GET /api/brands
#  GET /api/brands/:id/products
#  GET /api/products

# =======PENDING=======
#  POST /api/login

# ======ABANDONED======
#  GET /api/products/:id (Not original path recommended by assignment; abandoned)

# ========TODO=========
#  GET /api/me/cart
#  POST /api/me/cart
#  DELETE /api/me/cart/:productId
#  POST /api/me/cart/:productId
